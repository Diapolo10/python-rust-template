# This workflow automatically creates a GitHub release for the project on successful version update

name: Create a GitHub release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        cache-dependency-glob: "uv.lock"
        enable-cache: true
        python-version: "3.12"
        version: "0.5.13"

    - name: Install library and dependencies
      run: |
        uv sync --frozen

    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist --find-interpreter

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        cache-dependency-glob: "uv.lock"
        enable-cache: true
        python-version: "3.12"
        version: "0.5.13"

    - name: Install library and dependencies
      run: |
        uv sync --frozen

    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        cache-dependency-glob: "uv.lock"
        enable-cache: true
        version: "0.5.13"

    - name: Install library and dependencies
      run: |
        uv sync --frozen

    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, windows, linux ]
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: wheels

      - name: Check Version
        uses: nowsprinting/check-version-format-action@v4
        id: version
        with:
          prefix: 'v'

      - name: Check for Pre-release
        uses: haya14busa/action-cond@v1
        id: is_prerelease
        with:
          cond: ${{ steps.version.outputs.prerelease != '' }}
          if_true: true
          if_false: false

      - name: Get Newest Changelog
        run: |
          python -c "import re; from pathlib import Path; text=re.sub('<!--(.*?)-->', '', (Path.cwd() / 'CHANGELOG.md').read_text(), flags=re.DOTALL); start=text.find('_' * 79); (Path.cwd() / 'TEMP_CHANGELOG.md').write_text(text[start:text.find('_' * 79, start+1)])"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ steps.is_prerelease.outputs.value }}
          body_path: ./TEMP_CHANGELOG.md
          files: |
            *.whl
            *.tar.gz

      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_PASSWORD }}
        with:
          command: upload
          args: --skip-existing *
