[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "project-name"
version = "0.1.0"
description = "A template mixed language (Python/Rust) project structure."
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
dependencies = []
authors = [
    { name = "Lari Liuhamo", email = "lari.liuhamo+pypi@gmail.com" },
]
maintainers = [
    { name = "Lari Liuhamo", email = "lari.liuhamo+pypi@gmail.com" },
]
keywords = [
    "python3",
    "rust",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Typing :: Typed",
]

[project.urls]
"Source code" = "https://github.com/Diapolo10/project-name"
"Changelog" = "https://github.com/Diapolo10/project-name/blob/main/CHANGELOG.md"
"Documentation" = "https://github.com/Diapolo10/project-name/tree/main/docs"
"Tracker" = "https://github.com/Diapolo10/project-name/issues"

[dependency-groups]
dev = [
    "jinja2>=3.1.6",
    "maturin>=1.8.3",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist[psutil]>=3.6.1",
    "ruff>=0.11.0",
    "sphinx>=8.2.3",
    "tox>=4.25.0",
    "tox-gh-actions>=3.3.0",
]

[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "tests/*",
]

[tool.maturin]
auditwheel = "repair"
bindings = "pyo3"
compatibility = "manylinux2014"
module-name = "project_name._project_name"
python-source = "python"
strip = true
sdist-generator = "cargo"

[tool.pytest.ini_options]
addopts = """
--benchmark-autosave \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--dist worksteal
--doctest-modules \
--ignore=docs/ \
-n logical
"""
filterwarnings = [
    "ignore::pytest_benchmark.logger.PytestBenchmarkWarning",
]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "COM812",  # Missing trailing comma (disabled due to formatter conflict)
    "D203",    # One blank line before class docstring
    "D212",    # Multi-line summary first line
    "ISC001",  # Single-line implicit string concatenation (disabled due to formatter conflict)
    "PLR0913", # Too many arguments
    "Q000",    # Single quotes found but double quotes preferred
]
line-length = 120
show-fixes = true
src = ["python",]
target-version = "py39"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405", "PGH003",]
"tests/*" = ["ANN", "ARG", "INP001", "S101",]

[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{9, 10, 11, 12}, pypy3
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    pypy-3.10: pypy3

[testenv]
pass_env =
    GITHUB_*
    FORCE_COLOR
allowlist_externals = uv

commands =
    uv run --frozen pytest
    uv run --frozen coverage report
"""
